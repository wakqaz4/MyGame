<?xml version="1.0" encoding="utf-8"?>
<!--
/* Copyright (C) 2005-2015, UNIGINE Corp. All rights reserved.
 *
 * This file is a part of the UNIGINE 2.0-RC SDK.
 *
 * Your use and / or redistribution of this software in source and / or
 * binary form, with or without modification, is subject to: (i) your
 * ongoing acceptance of and compliance with the terms and conditions of
 * the UNIGINE License Agreement; and (ii) your inclusion of this notice
 * in any version of this software that you use or redistribute.
 * A copy of the UNIGINE License Agreement is available by contacting
 * UNIGINE Corp. at http://unigine.com/
 */

-->

<materials version="1.00" editable="0">
	
	<!--
	/**************************************************************************\
	*
	* Mesh shadow materials
	*
	\**************************************************************************/
	-->
	
	<!--
	/* Mesh shadow base material
	 */
	-->
	<material name="mesh_shadow_base" editable="0">
		
		<!-- blending -->
		<blend src="src_alpha" dest="one_minus_src_alpha"/>
		
		<!-- options -->
		<options depth_mask="0" cast_shadow="0" cast_world_shadow="0" light_blending="1"/>
		
		<!-- states -->
		<state name="auxiliary" type="switch" items="none,default">0</state>
		<state name="light_omni" type="switch" items="none,default">1</state>
		<state name="light_proj" type="switch" items="none,default">1</state>
		<state name="light_world" type="switch" items="none,default">1</state>
		
		<!-- wireframe shaders -->
		<shader pass="wireframe" object="mesh_static"
			defines="BASE_WIREFRAME"
			vertex="core/shaders/default/mesh/vertex_base.shader"
			geometry="core/shaders/default/common/geometry_base_wireframe.shader"
			fragment="core/shaders/default/common/fragment_base_wireframe.shader"/>
		
		<!-- auxiliary shaders -->
		<shader pass="auxiliary" object="mesh_static"
			defines="BASE_AUXILIARY"
			auxiliary="1"
			vertex="core/shaders/default/mesh/vertex_base.shader"
			fragment="core/shaders/default/mesh/fragment_base_auxiliary.shader"/>
		
		<!-- light omni shaders -->
		<shader pass="light_omni" object="mesh_static"
			defines="BASE_LIGHT_OMNI,OMNI"
			receive_shadow_defines=",SHADOW"
			light_omni="1"
			vertex="core/shaders/default/mesh/vertex_base.shader"
			fragment="core/shaders/default/mesh/fragment_shadow_light_omni.shader"/>
		
		<!-- light proj shaders -->
		<shader pass="light_proj" object="mesh_static"
			defines="BASE_LIGHT_PROJ,PROJ"
			receive_shadow_defines=",SHADOW"
			light_proj="1"
			vertex="core/shaders/default/mesh/vertex_base.shader"
			fragment="core/shaders/default/mesh/fragment_shadow_light_proj.shader"/>
		
		<!-- light world shaders -->
		<shader pass="light_world" object="mesh_static"
			defines="BASE_LIGHT_WORLD,WORLD"
			receive_world_shadow_defines=",SHADOW"
			light_world="1"
			vertex="core/shaders/default/mesh/vertex_base.shader"
			fragment="core/shaders/default/mesh/fragment_shadow_light_world.shader"/>
		
		<!-- bindings -->
		<bind object="mesh_cluster" to="mesh_static"/>
		<bind object="mesh_clutter" to="mesh_static"/>
		<bind object="mesh_dynamic" to="mesh_static"/>
		<bind object="mesh_skinned" to="mesh_static"/>
		
		<!-- textures -->
		<texture name="light_color" pass="light_omni,light_proj,light_world" unit="12" type="light_color"/>
		<texture name="light_depth" pass="light_omni,light_proj,light_world" type="light_depth"/>
		<texture name="light_noise" pass="light_omni,light_proj,light_world" type="light_noise"/>
		<texture name="light_vcube" pass="light_omni" type="light_vcube"/>
		
		<!-- parameters -->
		<parameter name="light_color" type="color" shared="1">0.0 0.0 0.0 0.0</parameter>
		<parameter name="shadow_color" type="color" shared="1">1.0 1.0 1.0 1.0</parameter>
		<parameter name="auxiliary_color" auxiliary="1" type="color" shared="1">1.0 1.0 1.0 1.0</parameter>
	</material>
	
</materials>
